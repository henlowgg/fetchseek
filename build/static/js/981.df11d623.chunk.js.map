{"version":3,"file":"static/js/981.df11d623.chunk.js","mappings":"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","sources":["components/FilterComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst FilterComponent = ({ onFilterChange }) => {\r\n  const [breeds, setBreeds] = useState([]);\r\n  const [zipCodes, setZipCodes] = useState(\"\");\r\n  const [ageMin, setAgeMin] = useState(\"\");\r\n  const [ageMax, setAgeMax] = useState(\"\");\r\n  const [size, setSize] = useState(25);\r\n  const [sort, setSort] = useState(\"breed:asc\");\r\n\r\n  useEffect(() => {\r\n    // Fetch dog breeds and update the state when the component mounts\r\n    const fetchBreeds = async () => {\r\n      try {\r\n        const response = await fetch('https://frontend-take-home-service.fetch.com/dogs/breeds', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const breeds = await response.json();\r\n          setBreeds(breeds);\r\n        } else {\r\n          console.error('Failed to fetch breeds:', response.status, response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during fetchBreeds:', error);\r\n      }\r\n    };\r\n\r\n    fetchBreeds();\r\n  }, []); // Empty dependency array to fetch breeds only once when the component mounts\r\n\r\n  const handleFilterChange = () => {\r\n    const newFilterParams = {\r\n      breeds: breeds ? breeds.split(\",\") : [],\r\n      zipCodes: zipCodes ? zipCodes.split(\",\") : [],\r\n      ageMin: ageMin ? parseInt(ageMin, 10) : null,\r\n      ageMax: ageMax ? parseInt(ageMax, 10) : null,\r\n      size: parseInt(size, 10),\r\n      sort,\r\n    };\r\n\r\n    onFilterChange(newFilterParams);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Filter Dogs</h3>\r\n      <div>\r\n        <label htmlFor=\"breeds\">Breeds:</label>\r\n        <select\r\n          id=\"breeds\"\r\n          value={breeds}\r\n          onChange={(e) => setBreeds(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select Breed --</option>\r\n          {breeds.map((breed) => (\r\n            <option key={breed.id} value={breed.id}>\r\n              {breed.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"zipCodes\">Zip Codes (comma-separated):</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"zipCodes\"\r\n          value={zipCodes}\r\n          onChange={(e) => setZipCodes(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"ageMin\">Minimum Age:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"ageMin\"\r\n          value={ageMin}\r\n          onChange={(e) => setAgeMin(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"ageMax\">Maximum Age:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"ageMax\"\r\n          value={ageMax}\r\n          onChange={(e) => setAgeMax(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"size\">Results Size:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"size\"\r\n          value={size}\r\n          onChange={(e) => setSize(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"sort\">Sort Order:</label>\r\n        <select\r\n          id=\"sort\"\r\n          value={sort}\r\n          onChange={(e) => setSort(e.target.value)}\r\n        >\r\n          <option value=\"breed:asc\">Breed (Ascending)</option>\r\n          <option value=\"breed:desc\">Breed (Descending)</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Added a button to trigger the filter change */}\r\n      <button onClick={handleFilterChange}>Apply Filters</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterComponent;\r\n"],"names":["_ref","onFilterChange","breeds","setBreeds","useState","zipCodes","setZipCodes","ageMin","setAgeMin","ageMax","setAgeMax","size","setSize","sort","setSort","useEffect","async","response","fetch","method","headers","concat","localStorage","getItem","ok","json","console","error","status","statusText","fetchBreeds","_jsxs","children","_jsx","htmlFor","id","value","onChange","e","target","map","breed","name","type","onClick","handleFilterChange","newFilterParams","split","parseInt"],"sourceRoot":""}